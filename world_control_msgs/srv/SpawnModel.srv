# This service spawns the described model in the unreal world.

#  the name of the model (mesh) to be spawned
string name

# Pose the model is supposed to have
# pose in right handed, ros coord system
geometry_msgs/Pose pose

# Everything below this is OPTIONAL
# If not set make sure to safe returned id if you want to have refrence to the object
string id

# UTags that the should be set to Model
world_control_msgs/Tag[] tags

# path in the project directory (ProjectContentDir() + path) where to start searching for the model
# if not found in the given path, a recursive search will be done in ProjectContentDir()
# (If multiple search results will be return, first one will be used)
string path

# name of the model in the editor
string actor_label

# This attribute is mainly necessary if you are working with non-editor builds
# It will explicitly set AActor::Name during spawn to the supplied value if non-empty. 
# Please note though, that the name of each AActor in the world **MUST** be unique. Otherwise UE4 will fail.
string override_name

# Physics proterties of the Model
world_control_msgs/PhysicsProperties physics_properties

# By default the default materials of the mesh are used
string[] material_names
string[] material_paths

# parent to which to attach to (no relative poses) world pose will be used
string parent_id

# bool to decide whether or not to check for spawn collisions. Default is false.
bool spawn_collision_check
---
# The returned id is generated if none was given (UIdBase64Url)
string id
# The returned Name of the Actor that has been spawned. Might contain
# an autogenerated Number at the end which will ultimately differ
# from the Name you assigned in the service call
string name
# The ErrorType
string etype
# true if model was spawned successfully.
bool success

